@model NTP_MVC.Models.SO_BenhNhan

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "BenhNhanFormLayout";
    settings.Width = Unit.Percentage(100);
    settings.ColCount = 4;
    var groupItem = settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "Thông tin bệnh nhân";
        groupSettings.ShowCaption = DefaultBoolean.True;
        groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
        groupSettings.CellStyle.Paddings.Padding = Unit.Pixel(0);
        
    });

    groupItem.SettingsItems.ShowCaption = DefaultBoolean.True;
    //groupItem.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;
    groupItem.ParentContainerStyle.Paddings.Padding = Unit.Pixel(0);

    groupItem.ColCount = 4;
    groupItem.ColSpan = 4;

     
    groupItem.Items.Add(m =>
    {
        m.FieldName = "HoTen";
        m.ColSpan = 2; 
        m.SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HoTen, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100); 
            }).Render();
        });
    });
    groupItem.Items.Add(m =>
     {
         m.FieldName = "GioiTinh";
         m.ColSpan = 1;
         //m.CaptionStyle.Font.Bold = true; 
         m.SetNestedContent(() =>
             {
                 Html.DevExpress().RadioButtonListFor(i => i.Gioitinh, mySettings =>
                 {
                     mySettings.Width = Unit.Percentage(100);
                     mySettings.Properties.ValueType = typeof(bool);
                     mySettings.Properties.RepeatLayout = RepeatLayout.Flow;
                     mySettings.Properties.RepeatDirection = RepeatDirection.Horizontal;
                     mySettings.Properties.RepeatColumns = 2;
                     mySettings.Properties.Items.Add("Nam", true);
                     mySettings.Properties.Items.Add("Nữ", false);
                 }).Render();
             });
     });
    groupItem.Items.Add(m =>
    {
        m.FieldName = "Tuoi";
        m.ColSpan = 1; 
        m.SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Tuoi, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.Properties.MinValue = 1;
                mySettings.Properties.MaxValue = 100; 
                mySettings.Properties.SpinButtons.ShowIncrementButtons = false;
            }).Render();
        });
    });
    groupItem.Items.Add(m =>
    {
        m.FieldName = "Sodienthoai";
        m.ColSpan = 1;
        //m.CaptionStyle.Font.Bold = true;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Sodienthoai, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.Properties.MinValue = 1;
                mySettings.Properties.MaxValue = int.MaxValue;
                mySettings.Properties.SpinButtons.ShowIncrementButtons = false;
            }).Render();
        });
    });
    groupItem.Items.Add(m =>
    {
        m.FieldName = "SoCMND";
        m.ColSpan = 1;
        //m.CaptionStyle.Font.Bold = true;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.SoCMND, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
                mySettings.Properties.MinValue = 1;
                mySettings.Properties.MaxValue = int.MaxValue;
                mySettings.Properties.SpinButtons.ShowIncrementButtons = false;
            }).Render();
        });
    });
    groupItem.Items.Add(m =>
    {
        m.FieldName = "BHYT";
        m.ColSpan = 2;
        //m.CaptionStyle.Font.Bold = true;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().MemoFor(i => i.BHYT, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
            }).Render();
        });
    });
    groupItem.Items.Add(m =>
    {
        m.FieldName = "Diachi";
        m.ColSpan = 1;
        //m.CaptionStyle.Font.Bold = true;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().MemoFor(i => i.Diachi, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
            }).Render();
        });
    });
    groupItem.Items.Add(m =>
    {
        m.FieldName = "MA_TINH";
        m.ShowCaption = DefaultBoolean.False;
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {
            @Html.DevExpress().ComboBoxFor(i => i.MA_TINH, cbbSettings =>
                {
                    //cbbSettings.Name = "MA_TINH";
                    cbbSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                    cbbSettings.CallbackRouteValues = new { Controller = "BenhNhan", Action = "ComboBoxTinhList" };
                    cbbSettings.Properties.DropDownStyle = DropDownStyle.DropDown;
                    cbbSettings.Properties.ValueType = typeof(string);
                    cbbSettings.Properties.ValueField = "MA_TINH";
                    cbbSettings.Properties.TextField = "TEN_TINH";
                    cbbSettings.Properties.Caption = "Tỉnh";
                    cbbSettings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) {ComboBoxHuyen.PerformCallback(); }";
                    cbbSettings.SelectedIndex = 0;
                    //cbbSettings.ClientEnabled = Session["MATINH"] == "";
                }).BindList(ViewData["Tinhs"]).Render();
        });
    });
    groupItem.Items.Add(m =>
    {
        m.FieldName = "MA_HUYEN";
        m.ShowCaption = DefaultBoolean.False;
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {
            @Html.DevExpress().ComboBoxFor(i => i.MA_HUYEN, cbbSettings =>
                 {
                     //cbbSettings.Name = "MA_HUYEN";
                     cbbSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                     cbbSettings.Properties.DropDownStyle = DropDownStyle.DropDown;
                     cbbSettings.CallbackRouteValues = new { Controller = "BenhNhan", Action = "ComboBoxHuyenList" };
                     cbbSettings.Properties.CallbackPageSize = 5000;
                     cbbSettings.Properties.ValueField = "MA_HUYEN";
                     cbbSettings.Properties.TextField = "TEN_HUYEN";
                     cbbSettings.Properties.ValueType = typeof(string);
                     cbbSettings.Properties.Caption = "Huyện";
                     cbbSettings.Properties.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['MaTinh'] = ComboBoxTinh.GetValue(); }";
                     cbbSettings.SelectedIndex = 0;
                     //cbbSettings.ClientEnabled = Session["MAHUYEN"] == null;
                 }).BindList(ViewData["Huyens"]).Render();
        });
    });
    groupItem.Items.Add(m =>
    {
        m.FieldName = "MA_XA";
        m.ColSpan = 1;
        m.SetNestedContent(() =>
        {

            @Html.DevExpress().ComboBoxFor(i => i.MA_XA, cbbSettings =>
            {
                //cbbSettings.Name = "MA_XA";
                cbbSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                cbbSettings.Properties.DropDownStyle = DropDownStyle.DropDown;
                cbbSettings.CallbackRouteValues = new { Controller = "BenhNhan", Action = "ComboBoxXaList" };
                cbbSettings.Properties.CallbackPageSize = 500;
                cbbSettings.Properties.ValueField = "MA_XA";
                cbbSettings.Properties.TextField = "TEN_XA";
                cbbSettings.Properties.ValueType = typeof(string);
            }).BindList(ViewData["Xas"]).Render();
        });
    }); 
    groupItem.Items.Add(m =>
    {
        m.FieldName = "NgheNghiep";
        m.ColSpan = 4;
        //m.CaptionStyle.Font.Bold = true;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().MemoFor(i => i.NgheNghiep, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
            }).Render();
        });
    }); 

    groupItem.Items.Add(m =>
      {
          m.FieldName = "MaNoiGioiThieu";
          m.Caption = "Nơi giới thiệu";
          m.ColSpan = 1;
          //m.CaptionStyle.Font.Bold = true;
          m.NestedExtensionSettings.Width = Unit.Percentage(100);
      }).SetNestedContent(() =>
      {
          Html.DevExpress().ComboBoxFor(i => i.MaNoiGioiThieu, cbSettings =>
          {
              cbSettings.Properties.DropDownStyle = DropDownStyle.DropDownList;
              cbSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
              cbSettings.Properties.Items.Add("Thuộc hệ thống CTCL", 1);
              cbSettings.Properties.Items.Add("Y tế công tham gia CTCL", 2);
              cbSettings.Properties.Items.Add("Y tế tư", 3);
              cbSettings.Properties.Items.Add("Cộng đồng", 4);
              cbSettings.Properties.Items.Add("Tự đến", 5);
              cbSettings.Width = Unit.Percentage(100);
              cbSettings.Properties.Width = Unit.Percentage(100);
          }).Render();
      }); 
    groupItem.Items.Add(m =>
    {
        m.FieldName = "NoiGioiThieu";
        m.ShowCaption =  DefaultBoolean.False;
        m.ColSpan =3;
        //m.CaptionStyle.Font.Bold = true;
        m.SetNestedContent(() =>
        {
            Html.DevExpress().MemoFor(i => i.NoiGioiThieu, mySettings =>
            {
                mySettings.Width = Unit.Percentage(100);
            }).Render();
        });
    });


    Session["ID_BenhNhan"] = Model != null ? Model.ID_BenhNhan + "" : "";
    Session["HoTen"] = Model != null ? Model.HoTen + "" : "";
    Session["Gioitinh"] = Model != null ? Model.Gioitinh == true ? "Nam" : "Nữ" : "";
    Session["Tuoi"] = Model != null ? Model.Tuoi + "" : "";
    Session["Diachi"] = Model != null ? Model.Diachi + "" : "";
    Session["MATINH"] = Model != null ? Model.MA_TINH + "" : "";
    Session["MAHUYEN"] = Model != null ? Model.MA_HUYEN + "" : "";
    //Html.HiddenFor(m => m.MA_TINH);
    //Html.HiddenFor(m => m.MA_HUYEN); 
}).GetHtml()
