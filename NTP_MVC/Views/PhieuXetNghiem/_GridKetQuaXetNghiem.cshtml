@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridKetQuaXetNghiem";
        settings.Width = Unit.Percentage(100);

        settings.CallbackRouteValues = new { Controller = "PhieuXetNghiem", Action = "GridKetQuaXetNghiem" };
        settings.ClientSideEvents.BeginCallback = "GridKQPXN_OnBeginCallback";

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "PhieuXetNghiem", Action = "GridKetQuaXetNghiemAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "PhieuXetNghiem", Action = "GridKetQuaXetNghiemUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "PhieuXetNghiem", Action = "GridKetQuaXetNghiemDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;
        settings.CommandColumn.Visible = false;

        settings.KeyFieldName = "ID_PhieuXetNghiem;SoXN;MauDom";

        /* Behavior */
        //settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        //settings.Settings.ShowTitlePanel = true;
        //settings.Settings.ShowGroupPanel = true;
        //settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.ConfirmDelete = true;
        //settings.SettingsSearchPanel.Visible = true;
        settings.SettingsBehavior.AllowDragDrop = false;
        //settings.HtmlEditFormCreated = (s, e) =>
        //{
        //    GridViewHtmlEditFormPopupContainer container = e.EditForm as GridViewHtmlEditFormPopupContainer;
        //    GridViewHtmlEditFormPopup popup = container.NamingContainer as GridViewHtmlEditFormPopup;
        //    popup.PopupAnimationType = AnimationType.None;
        //};

        /* Pager */
        //settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        //settings.SettingsPager.AllButton.Text = "Tất cả";
        //settings.SettingsPager.NextPageButton.Text = "Tiếp theo >";
        //settings.SettingsPager.PrevPageButton.Text = "< Quay lại";
        //settings.SettingsPager.Visible = true;

        //settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
        //settings.Settings.VerticalScrollableHeight = 60;
        settings.ClientSideEvents.RowDblClick = "OnGridKQXNRowDblClick";
        settings.Columns.Add(i =>
        {
            i.FieldName = "SoXN";
            i.Caption = "Số XN"; 
            i.Width = Unit.Pixel(100);
            i.HeaderStyle.Paddings.Padding = Unit.Pixel(1);
        });
        settings.Columns.Add(i =>
        {
            i.FieldName = "NgayNhanMau";
            i.Caption = "Ngày nhận mẫu";
            i.Width = Unit.Pixel(100);
            i.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
            i.ColumnType = MVCxGridViewColumnType.DateEdit;
            i.HeaderStyle.Paddings.Padding = Unit.Pixel(1);
        });
        settings.Columns.Add(i =>
        {
            i.FieldName = "MauDom";
            i.Caption = "Mẫu đờm";
            i.Width = Unit.Pixel(80);
            i.HeaderStyle.Paddings.Padding = Unit.Pixel(1);
        });
        settings.Columns.Add(i =>
        {
            i.FieldName = "TrangThaiDom";
            i.Caption = "Trạng thái đờm";
            i.Width = Unit.Pixel(250);
            i.HeaderStyle.Paddings.Padding = Unit.Pixel(1);
            i.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = i.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.Items.Add("Máu", "Máu");
            comboBoxProperties.Items.Add("Nhày mủ", "Nhày mủ");
            comboBoxProperties.Items.Add("Nước bọt", "Nước bọt");
        });
        settings.Columns.Add(i =>
        {
            i.FieldName = "KetQua";
            i.Caption = "Kết quả";
            i.Width = Unit.Pixel(150);
            i.HeaderStyle.Paddings.Padding = Unit.Pixel(1);
            i.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = i.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DropDownRows = 15;
            comboBoxProperties.Items.Add("Âm", 0);
            comboBoxProperties.Items.Add("1AFB", 1);
            comboBoxProperties.Items.Add("2AFB", 2);
            comboBoxProperties.Items.Add("3AFB", 3);
            comboBoxProperties.Items.Add("4AFB", 4);
            comboBoxProperties.Items.Add("5AFB", 5);
            comboBoxProperties.Items.Add("6AFB", 6);
            comboBoxProperties.Items.Add("7AFB", 7);
            comboBoxProperties.Items.Add("8AFB", 8);
            comboBoxProperties.Items.Add("9AFB", 9);
            comboBoxProperties.Items.Add("1+", 10);
            comboBoxProperties.Items.Add("2+", 11);
            comboBoxProperties.Items.Add("3+", 12);
        });

        settings.CellEditorInitialize = (sender, e) =>
        {
            MVCxGridView gridView = sender as MVCxGridView;
            if (sender == null || !gridView.IsNewRowEditing)
                return;
            if (e.Column.FieldName.Equals("ID_PhieuXetNghiem") && e.Editor.Value == null)
                e.Editor.Value = Convert.ToInt64(Session["ID_PhieuXetNghiem"]);
            //if (e.Column.FieldName.Equals("ID_PhieuXetNghiem_KQ") && e.Editor.Value == null)
            //    e.Editor.Value = Session["ID_PhieuXetNghiem"] + "|" + Session["SoXN"] + "|" + Session["MauDom"] + "|";
            if (e.Column.FieldName.Equals("SoXN") && e.Editor.Value == null)
                e.Editor.Value = Session["SoXN"];
            if (e.Column.FieldName.Equals("NgayNhanMau") && e.Editor.Value == null)
                e.Editor.Value = Session["NgayNhanMau"];
            if (e.Column.FieldName.Equals("MauDom") && e.Editor.Value == null)
                e.Editor.Value = Session["MaxMauDom"];
        };
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(ViewData["ListKQXN"]).GetHtml()