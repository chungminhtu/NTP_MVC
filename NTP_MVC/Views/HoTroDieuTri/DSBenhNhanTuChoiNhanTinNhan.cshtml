@model NTP_MVC.Models.HTDTGS

<script src="@Url.Content("~/Scripts/js/jquery.min.js")"></script>
<link href="@Url.Content("~/Content/styles/lib/bootstrap.min.css")" rel="stylesheet">
<link href="@Url.Content("~/Content/styles/kendo.common.min.css")" rel="stylesheet">
<link href="@Url.Content("~/Content/styles/kendo.default.min.css")" rel="stylesheet">
<link href="@Url.Content("~/Content/styles/style.css")" rel="stylesheet">
<script type="text/javascript" src="@Url.Content("~/Scripts/js/kendo.web.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.confirm/jquery.confirm.js")"></script>
<link href="@Url.Content("~/Scripts/jquery.confirm/jquery.confirm.css")" rel="stylesheet">
<script type="text/javascript" src="@Url.Content("~/Scripts/js/cultures/kendo.culture.vi-VN.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/cultures/kendo.culture.vi.min.js")"></script>

<script>
    $(document).ready(function () {
        kendo.culture("vi-VN");
        var jsonReq = {};

        dataSourceProvince = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "MA_TINH",
                    fields: {
                        MA_TINH: { editable: false, nullable: true },
                        TEN_TINH: { validation: { required: true } }
                    }
                }
            }
        });

        var filterProvince = $("#filterProvince").kendoDropDownList({
            optionLabel: '---',
            dataTextField: "TEN_TINH",
            dataValueField: "MA_TINH",
            filter: "contains",
            dataSource: dataSourceProvince,
            change: onChangeFilterProvince
        }).data("kendoDropDownList");

        function getProvinces() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetProvinces", "HoTroDieuTri")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    dataSourceProvince.data(data);
                    var provinceId = @Session["MATINH"];
                    if (provinceId != null && provinceId > 0) {
                        filterProvince.value(provinceId);
                        filterProvince.enable(false);
                        onChangeFilterProvince();
                    } else {
                        filterProvince.value('');
                    }
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        }

        dataSourceDistrict = new kendo.data.DataSource({
            serverFiltering: true,
            batch: true,
            serverPaging: true,
            schema: {
                model: {
                    id: "MA_HUYEN",
                    fields: {
                        MA_HUYEN: { editable: false, nullable: true },
                        TEN_HUYEN: { validation: { required: true } }
                    }
                }
            }
        });

        var filterDistrict = $("#filterDistrict").kendoDropDownList({
            autoBind: false,
            optionLabel: '---',
            dataTextField: "TEN_HUYEN",
            dataValueField: "MA_HUYEN",
            filter: "contains",
            dataSource: dataSourceDistrict,
            change: onChangeFilterDistrict
        }).data("kendoDropDownList");

        function onChangeFilterProvince() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetDistricts", "HoTroDieuTri")",
                data: {provinceId: filterProvince.value()},
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    dataSourceDistrict.data(data);
                    var districtId = @Session["MAHUYEN"];
                    if (districtId != null && districtId > 0) {
                        filterDistrict.value(districtId);
                        filterDistrict.enable(false);
                        onChangeFilterDistrict();
                    } else {
                        filterDistrict.value('');
                    }
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        };

        dataSourceCommune = new kendo.data.DataSource({
            serverFiltering: true,
            batch: true,
            serverPaging: true,
            schema: {
                model: {
                    id: "MA_XA",
                    fields: {
                        MA_XA: { editable: false, nullable: true },
                        TEN_XA: { validation: { required: true } }
                    }
                }
            }
        });

        var filterCommune = $("#filterCommune").kendoDropDownList({
            autoBind: false,
            optionLabel: '---',
            dataTextField: "TEN_XA",
            dataValueField: "MA_XA",
            filter: "contains",
            dataSource: dataSourceCommune
        }).data("kendoDropDownList");
        //var curUsername = "${pageContext.request.remoteUser}";

        function onChangeFilterDistrict() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCommunes", "HoTroDieuTri")",
                data: { provinceId : filterDistrict.value() }, 
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    dataSourceCommune.data(data);
                    filterCommune.value('');
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        };        

        dataSourceTherapy = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "@Url.Action("GetTherapies", "HoTroDieuTri")",
                    dataType: "json"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 30,
            schema: {
                model: {
                    id: "ID_PhacdoDT",
                    fields: {
                        ID_PhacdoDT: { editable: false, nullable: true },
                        Ten_PhacdoDT: { validation: { required: true } },
                        Phanloai: { validation: { required: true } }
                    }
                }
            }
        });
        dataSourceTherapy.fetch();

        dataSourceLoaiBenh = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "@Url.Action("GetLoaiBenhs", "HoTroDieuTri")",
                    dataType: "json"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 30,
            schema: {
                model: {
                    id: "ID_PhanLoaiBenh",
                    fields: {
                        ID_PhanLoaiBenh: { editable: false, nullable: true },
                        Ten_PhanLoaiBenh: { validation: { required: true } }
                    }
                }
            }
        });
        dataSourceLoaiBenh.fetch();
        var totalTuChoiNhanTinNhan = 0;
        var dataSourceBenhNhanTuChoiNhanTinNhan = new kendo.data.DataSource({
            transport: {
                read: function (options) {
                    jsonReq = options.data;
                    var provinceId = $("#filterProvince").val();
                    var districtId = $("#filterDistrict").val();
                    var communeId = $("#filterCommune").val();
                    
                    if (provinceId == '') provinceId = 0;
                    if (districtId == '') districtId = 0;
                    if (communeId == '') communeId = 0;

                    jsonReq.provinceId = provinceId;
                    jsonReq.districtId = districtId;
                    jsonReq.communeId = communeId;
                                        
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetBenhNhanTuChoiNhanTinNhan", "HoTroDieuTri")",
                        data: JSON.stringify(jsonReq),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            totalTuChoiNhanTinNhan = data.totalTuChoiNhanTinNhan;
                            options.success(data);
                        },
                        failure: function (errMsg) {
                            alert(errMsg);
                        }
                    });

                }
            },
            pageSize: 10,
            schema: {
                total: "total",
                data: "patients",
                type: "json",
                model: {
                    id: "ID_BenhNhan",
                    fields: {
                        ID_BenhNhan: { editable: false, nullable: true },
                        HoTen: { editable: false, validation: { required: true } },
                        Tuoi: { editable: false, validation: { required: true } },
                        Gioitinh: { editable: false, validation: { required: true } },
                        Diachi: { editable: false, validation: { required: true } },
                        LyDoTuChoi: { editable: true },
                        Sodienthoai: { validation: { required: true } },
                        NgayTuChoi: {editable: true}
                    }
                }
            },
            serverPaging: true
        });

        var gridBenhNhanTuChoiNhanTinNhan = $("#gridBenhNhanTuChoiNhanTinNhan").kendoGrid({
            autoBind: false,
            dataSource: dataSourceBenhNhanTuChoiNhanTinNhan,
            navigatable: true,
            pageable: true,
            pageable: {
                messages: {
                    display: '{0} - {1} / {2} bệnh nhân',
                    empty: ""
                }
            },
            resizable: true,
            sortable: true,
            columns: [
                { field: "HoTen", title: 'Họ tên', editor: function (element, options) { element.text(options.model.HoTen) }, template: '#= HoTen #' },
                { field: "Tuoi", width: "40px", title: 'Tuổi', editor: function (element, options) { element.text(options.model.Tuoi) }, template: '#= Tuoi #' },
                { field: "Gioitinh", width: "70px", title: 'Giới tính', editor: function (element, options) { element.text(genders[options.model.Gioitinh ? 0 : 1].sex) }, template: "#= Gioitinh ? 'Nam' : 'Nữ' #" },
                { field: "Sodienthoai", title: 'Di động', editor: function (element, options) { element.text(options.model.Sodienthoai) }, template: '#= Sodienthoai #' },
                { field: "TEN_XA", title: 'Phường/Xã', editor: function (element, options) { element.text(options.model.TEN_XA) }, template: "#= TEN_XA #" },
                { field: "NgayDT", width: "90px", title: 'Ngày điều trị', editor: function (element, options) { var treatDate = options.model.NgayDT; element.text(treatDate ? kendo.toString(kendo.parseDate(treatDate,"yyyy-MM-dd"), "dd/MM/yyyy") : "") }, template: '#= NgayDT ? kendo.toString(kendo.parseDate(NgayDT,"yyyy-MM-dd"), "dd/MM/yyyy") : "" #' },
                { field: "ID_PhacDoDT", title: 'Phác đồ', editor: function (element, options) { element.text(dataSourceTherapy.at(options.model.ID_PhacDoDT - 1).Ten_PhacdoDT) }, template: "#= dataSourceTherapy.at(ID_PhacDoDT - 1).Ten_PhacdoDT #" },
                { field: "ID_PhanLoaiBenh", title: 'Loại bệnh', editor: function (element, options) {var benh = options.model.ID_PhanLoaiBenh;  element.text(benh > 0 ? dataSourceLoaiBenh.at(benh-1).Ten_PhanLoaiBenh : '') }, template: "#= ID_PhanLoaiBenh ? dataSourceLoaiBenh.at(ID_PhanLoaiBenh-1).Ten_PhanLoaiBenh : '' #" },
                { field: "LyDoTuChoi", width: "120px", title: 'Lý do từ chối'},
                {
                    field: "NgayTuChoi", width: "120px",
                    title: 'Ngày cập nhập',
                    template: '#= NgayTuChoi ? kendo.toString(kendo.parseDate(NgayTuChoi,"yyyy-MM-dd"), "dd/MM/yyyy") : "" #',
                    editor: function (container, options) {
                        $('<input id=\"' + options.field + '\" />').appendTo(container)
                        .kendoDatePicker({ format: "dd/MM/yyyy" });
                        var datePickerDue = $("#NgayTuChoi").data("kendoDatePicker");
                        datePickerDue.value(options.model.NgayTuChoi);
                        // bind to the close event

                        datePickerDue.bind('close', function (e) {
                            options.model.NgayTuChoi = datePickerDue.value();
                        });
                    }
                }                
            ],
            editable: true,
            dataBound: function (e) {
                if (dataSourceBenhNhanTuChoiNhanTinNhan.total() > 0)
                    $("#log").html(totalTuChoiNhanTinNhan + "/" + dataSourceBenhNhanTuChoiNhanTinNhan.total() + ' bệnh nhân từ chối nhận tin nhắn');
                else
                    $("#log").html('Không tìm thấy dữ liệu');
            },
            selectable: true
        }).data("kendoGrid");        

        $("#buttonSearch").click(function () {
            searchPatient();

        });

        function searchPatient() {
            dataSourceBenhNhanTuChoiNhanTinNhan.fetch();
        }


        $("#buttonSave").click(function () {

            if (dataSourceBenhNhanTuChoiNhanTinNhan.total() > 0) {
                $.ajax({
                    url: "@Url.Action("SaveBenhNhanTuChoiNhanTinNhan", "HoTroDieuTri")",
                    data: JSON.stringify(dataSourceBenhNhanTuChoiNhanTinNhan.view()),
                    type: 'POST',
                    processData: true,
                    async: false,
                    contentType: "application/json",
                    success: function (data) {
                        alert("Dữ liệu đã được lưu thành công");
                    },
                    failure: function (errMsg) {
                        alert(errMsg);
                    }
                });
            }
        });

        $("#buttonExcel").click(function () {

            $.ajax({
                type: "POST",
                url: "@Url.Action("XuatExcelPatientDues", "HoTroDieuTri")",
                data: JSON.stringify(jsonReq),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    window.open("/" + data, '_blank');
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });

        });

        getProvinces();

    });

</script>
<h2>Danh sách bệnh nhân từ chối nhận tin nhắn</h2>
Tỉnh:&nbsp;<input id="filterProvince" style="width:130px" />&nbsp;&nbsp;&nbsp;
Huyện:&nbsp;<input id="filterDistrict" style="width:200px" />&nbsp;&nbsp;&nbsp;
Phường / Xã:&nbsp;<input id="filterCommune" style="width:200px" />
<input class="btn btn-primary" style="width:50px;cursor:pointer;" id="buttonSearch" name="buttonSearch" value="Tìm" readonly /><br />
<p style="height:3px"></p>
<font color="#EE7318"><div id="log">&nbsp;</div></font>
<div id="gridBenhNhanTuChoiNhanTinNhan"></div>
<p style="height:3px"></p>
<input class="btn btn-primary" id="buttonSave" name="buttonSave" value="Lưu" style="width:50px;cursor:pointer;" readonly />




