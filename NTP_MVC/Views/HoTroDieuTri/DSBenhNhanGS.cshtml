@model NTP_MVC.Models.HTDTGS

<script src="@Url.Content("~/Scripts/js/jquery.min.js")"></script>
<link href="@Url.Content("~/Content/styles/lib/bootstrap.min.css")" rel="stylesheet">
<link href="@Url.Content("~/Content/styles/kendo.common.min.css")" rel="stylesheet">
<link href="@Url.Content("~/Content/styles/kendo.default.min.css")" rel="stylesheet">
<link href="@Url.Content("~/Content/styles/style.css")" rel="stylesheet">
<script type="text/javascript" src="@Url.Content("~/Scripts/js/kendo.web.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.confirm/jquery.confirm.js")"></script>
<link href="@Url.Content("~/Scripts/jquery.confirm/jquery.confirm.css")" rel="stylesheet">
<script type="text/javascript" src="@Url.Content("~/Scripts/js/cultures/kendo.culture.vi-VN.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/cultures/kendo.culture.vi.min.js")"></script>
@{
    var tmpdistrictId = "0"; var tmpcommuneId = "0";
    if (Session != null && Session["MAHUYEN"] != null && Session["MAHUYEN"] != "")
    {
        tmpdistrictId = (string)Session["MAHUYEN"];
    }
    if (Session != null && Session["MAXA"] != null && Session["MAXA"] != "")
    {
        tmpcommuneId = (string)Session["MAXA"];
    }
}
<script>
    $(document).ready(function () {
        kendo.culture("vi-VN");
        var jsonReq = {};
        var haveChanged = 0;
        dataSourceProvince = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "MA_TINH",
                    fields: {
                        MA_TINH: { editable: false, nullable: true },
                        TEN_TINH: { validation: { required: true } }
                    }
                }
            }
        });

        var filterProvince = $("#filterProvince").kendoDropDownList({
            optionLabel: '---',
            dataTextField: "TEN_TINH",
            dataValueField: "MA_TINH",
            filter: "contains",
            dataSource: dataSourceProvince,
            change: onChangeFilterProvince
        }).data("kendoDropDownList");

        function getProvinces() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetProvinces", "HoTroDieuTri")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    dataSourceProvince.data(data);
                    var provinceId = @Session["MATINH"];
                    if (provinceId != null && provinceId > 0) {
                        filterProvince.value(provinceId);
                        filterProvince.enable(false);
                        onChangeFilterProvince();
                    } else {
                        filterProvince.value('');
                    }
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        }

        dataSourceDistrict = new kendo.data.DataSource({
            serverFiltering: true,
            batch: true,
            serverPaging: true,
            schema: {
                model: {
                    id: "MA_HUYEN",
                    fields: {
                        MA_HUYEN: { editable: false, nullable: true },
                        TEN_HUYEN: { validation: { required: true } }
                    }
                }
            }
        });

        var filterDistrict = $("#filterDistrict").kendoDropDownList({
            autoBind: false,
            optionLabel: '---',
            dataTextField: "TEN_HUYEN",
            dataValueField: "MA_HUYEN",
            filter: "contains",
            dataSource: dataSourceDistrict,
            change: onChangeFilterDistrict
        }).data("kendoDropDownList");

        function onChangeFilterProvince() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetDistricts", "HoTroDieuTri")",
                data: { provinceId : filterProvince.value() },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    dataSourceDistrict.data(data);
                    var districtId = @tmpdistrictId;
                    if (districtId != null && districtId != "0") {
                        filterDistrict.value(districtId);
                        filterDistrict.enable(false);
                        onChangeFilterDistrict();
                    } else {
                        filterDistrict.value('');
                    }
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        };

        dataSourceCommune = new kendo.data.DataSource({
            serverFiltering: true,
            batch: true,
            serverPaging: true,
            schema: {
                model: {
                    id: "MA_XA",
                    fields: {
                        MA_XA: { editable: false, nullable: true },
                        TEN_XA: { validation: { required: true } }
                    }
                }
            }
        });

        var filterCommune = $("#filterCommune").kendoDropDownList({
            autoBind: false,
            optionLabel: '---',
            dataTextField: "TEN_XA",
            dataValueField: "MA_XA",
            filter: "contains",
            dataSource: dataSourceCommune
        }).data("kendoDropDownList");
        //var curUsername = "${pageContext.request.remoteUser}";

        function onChangeFilterDistrict() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCommunes", "HoTroDieuTri")",
                data: { districtId : filterDistrict.value() },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    dataSourceCommune.data(data);
                    var communeId = @tmpcommuneId;
                    if (communeId != null && communeId != "0") {
                        filterCommune.value(communeId);
                        filterCommune.enable(false);
                    } else {
                        filterCommune.value('');
                    }
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        };
        function firstDayInPreviousMonth(yourDate) {
            return new Date(yourDate.getFullYear(), yourDate.getMonth(), 1);
        }
        var fromDate = $("#fromDate").kendoDatePicker({
            format: "dd/MM/yyyy",
            value: '01/01/2010'
        }).data("kendoDatePicker");
        var toDate = $("#toDate").kendoDatePicker({
            format: "dd/MM/yyyy",
            value: new Date()
        }).data("kendoDatePicker");
        var supervisionStatus =  [
            {id: 0, text: 'Đang điều trị'},
            {id: 1, text: 'Đã kết thúc điều trị'}
        ];
        var dataSourceSupervisionStatus = new kendo.data.DataSource({
            data: supervisionStatus
        });
        var dropdownSupervisionStatus = $("#dropdownSupervisionStatus").kendoDropDownList({
            autoBind: true,
            dataTextField: "text",
            dataValueField: "id",
            filter: "contains",
            dataSource: dataSourceSupervisionStatus
        }).data("kendoDropDownList");

        dataSourceTherapy = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "@Url.Action("GetTherapies", "HoTroDieuTri")",
                    dataType: "json"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 30,
            schema: {
                model: {
                    id: "ID_PhacdoDT",
                    fields: {
                        ID_PhacdoDT: { editable: false, nullable: true },
                        Ten_PhacdoDT: { validation: { required: true } },
                        Phanloai: { validation: { required: true } }
                    }
                }
            }
        });
        dataSourceTherapy.fetch();

        dataSourceLoaiBenh = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "@Url.Action("GetLoaiBenhs", "HoTroDieuTri")",
                    dataType: "json"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 30,
            schema: {
                model: {
                    id: "ID_PhanLoaiBenh",
                    fields: {
                        ID_PhanLoaiBenh: { editable: false, nullable: true },
                        Ten_PhanLoaiBenh: { validation: { required: true } }
                    }
                }
            }
        });
        dataSourceLoaiBenh.fetch();

        var dataSourceBenhNhanGS = new kendo.data.DataSource({
            transport: {
                read:  function(options) {
                    jsonReq = options.data;
                    var provinceId = $("#filterProvince").val();
                    var districtId = $("#filterDistrict").val();
                    var communeId = $("#filterCommune").val();
                    var statusId = $("#dropdownSupervisionStatus").val();
                    var textdatefilterFrom = kendo.toString(fromDate.value(),"yyyy-MM-dd HH:mm:ss");
                    var textdatefilterTo = kendo.toString(toDate.value(),"yyyy-MM-dd HH:mm:ss");
                    var today = new Date();texttoday = kendo.toString(today,"yyyy-MM-dd HH:mm:ss");
                    if (textdatefilterFrom == null || textdatefilterTo == null) {
                        alert("Bạn chưa chọn thời gian");
                        return;
                    }

                    if (textdatefilterFrom > textdatefilterTo) {
                        alert("Ngày bắt đầu không được lớn hơn ngày kết thúc");
                        return;
                    }
                    if (textdatefilterFrom > texttoday || textdatefilterTo > texttoday ) {
                        alert("Ngày lựa chọn không được lớn hơn ngày hiện tại");
                        return;
                    }
                    if (provinceId == '') provinceId = 0;
                    if (districtId == '') districtId = 0;
                    if (communeId == '') communeId = 0;
                    jsonReq.provinceId = provinceId;
                    jsonReq.districtId = districtId;
                    jsonReq.communeId = communeId;
                    jsonReq.fromDate = textdatefilterFrom;
                    jsonReq.toDate = textdatefilterTo;
                    jsonReq.statusId = statusId;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetDsBenhNhanGS", "HoTroDieuTri")",
                        data: JSON.stringify(jsonReq),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function(data) {
                            options.success(data);
                        },
                        failure: function(errMsg) {
                            alert(errMsg);
                        }
                    });

                }
            },
            pageSize: 10,
            schema: {
                total: "total",
                data: "patients",
                type: "json",
                model: {
                    id: "ID_BenhNhan",
                    fields: {
                        ID_BenhNhan: { editable: false, nullable: true },
                        HoTen: { editable: false, validation: { required: true } },
                        Tuoi: { editable: false, validation: { required: true } },
                        Gioitinh: { editable: false, validation: { required: true } },
                        Diachi: { editable: false, validation: { required: true } },
                        Sodienthoai: { validation: { required: true } }
                    }
                }
            },
            serverPaging: true
        });

        var gridBenhNhanGS = $("#gridBenhNhanGS").kendoGrid({
            autoBind: false,
            dataSource: dataSourceBenhNhanGS,
            navigatable: true,
            pageable: true,
            pageable: {
                messages: {
                    display: '{0} - {1} / {2} bệnh nhân',
                    empty: ""
                }
            },
            resizable: true,
            sortable: true,
            columns: [
                { field: "HoTen", title: 'Họ tên'},
                { field: "Tuoi", width: "40px", title: 'Tuổi'},
                { field: "Gioitinh", width: "70px", title: 'Giới tính', template: "#= Gioitinh ? 'Nam' : 'Nữ' #" },
                { field: "Sodienthoai", title: 'Di động'},
                { field: "TEN_XA", title: 'Phường/Xã'},
                { field: "NgayDT", width: "90px", title: 'Ngày điều trị', template: '#= NgayDT ? kendo.toString(kendo.parseDate(NgayDT,"yyyy-MM-dd"), "dd/MM/yyyy") : "" #' },
                { field: "ID_PhacDoDT", title: 'Phác đồ', template: "#= ID_PhacDoDT > 0 ? dataSourceTherapy.at(ID_PhacDoDT - 1).Ten_PhacdoDT : '' #" },
                { field: "ID_PhanLoaiBenh", title: 'Loại bệnh', template: "#= ID_PhanLoaiBenh ? dataSourceLoaiBenh.at(ID_PhanLoaiBenh-1).Ten_PhanLoaiBenh : '' #" }                               ,
                { field: "SoLanGiamSat", title: 'Số lần giám sát'},
            ],
            editable: false,
            dataBound: function (e) {
                if (dataSourceBenhNhanGS.total() > 0)
                    $("#log").html(dataSourceBenhNhanGS.total() + ' bệnh nhân');
                else
                    $("#log").html('Không tìm thấy dữ liệu');
            },
            selectable: true
        }).data("kendoGrid");

        $("#buttonSearch").click(function () {
            searchBenhNhan();
        });

        function searchBenhNhan() {
            dataSourceBenhNhanGS.fetch();
        }

        $("#buttonExcel").click(function () {

            $.ajax({
                type: "POST",
                url: "@Url.Action("XuatExcelBenhNhanGS", "HoTroDieuTri")",
                data: JSON.stringify(jsonReq),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    window.open('@Url.Content("~/")' + data, '_blank');
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });

        });

        getProvinces();

        var isNew = 0;
        $("#buttonNew").click(function() {
            isNew = 1;

            resetSupervisionForm();
            var selectedRow = gridBenhNhanGS.select();
            var modelBenhNhan = gridBenhNhanGS.dataItem(selectedRow);

            textPatientAge.value(modelBenhNhan.Tuoi);
            textPatientGender.value(modelBenhNhan.Gioitinh);
            $("#textPatientAddress").val(modelBenhNhan.Diachi);
            treatmentDate.value(kendo.parseDate(modelBenhNhan.NgayDT,"yyyy-MM-dd"));
            $("#mobileNumber").val(modelBenhNhan.Sodienthoai);
            textPatientPhanLoaiBenh.value(modelBenhNhan.ID_PhanLoaiBenh);
            therapy.value(modelBenhNhan.ID_PhacdoDT);

        });

        $("#buttonUpdate").click(function() {

            var regstr = "^[0-9]+[.]?[0-9]*$";
            var model = {};
            if (isNew == 1) {
                var selectedRow = gridBenhNhanGS.select();
                var modelBenhNhan = gridBenhNhanGS.dataItem(selectedRow);
                model = {ID: 0, ID_BenhNhan: modelBenhNhan.ID_BenhNhan, ID_SoDieuTri: modelBenhNhan.ID_SoDieuTri};
            } else if (isNew == 0){
                var value =dropdownSupervisions.select();
                var gs = dataSourceSupervisions.at(value-1);
                model.ID = gs.ID;
                model.ID_BenhNhan = gs.ID_BenhNhan;
                model.ID_SoDieuTri = gs.ID_SoDieuTri;
            }

            var strSupervisoryDate = kendo.toString(supervisoryDate.value(),"yyyy-MM-dd HH:mm:ss");
            var strTreatmentDate = kendo.toString(treatmentDate.value(),"yyyy-MM-dd HH:mm:ss");
            var strLastedMedicineIssuedDate = kendo.toString(lastedMedicineIssuedDate.value(),"yyyy-MM-dd HH:mm:ss");
            var today = new Date();texttoday = kendo.toString(today,"yyyy-MM-dd HH:mm:ss");
            if (strSupervisoryDate == null) {
                alert("Bạn chưa nhập ngày giám sát");
                return;
            }
            if (strSupervisoryDate > texttoday) {
                alert("Ngày giám sát không được lớn hơn ngày hiện tại");
                return;
            }
            if (strTreatmentDate == null) {
                alert("Bạn chưa nhập ngày điều trị");
                return;
            }
            if (strTreatmentDate > texttoday) {
                alert("Ngày điều trị không được lớn hơn ngày hiện tại");
                return;
            }
            if (strLastedMedicineIssuedDate == null) {
                alert("Bạn chưa nhập ngày cấp thuốc gần nhất");
                return;
            }
            if (strLastedMedicineIssuedDate > texttoday) {
                alert("Ngày cấp thuốc gần nhất không được lớn hơn ngày hiện tại");
                return;
            }
            if ($("#hDose").val() == '' || $("#eDose").val() == '' || $("#rhDose").val() == '' || $("#rhzDose").val() == '') {
                alert("Bạn chưa nhập liều lượng thuốc/ngày");
                return;
            }
            if ($("#hAmount").val() == '' || $("#eAmount").val() == '' || $("#rhAmount").val() == '' || $("#rhzAmount").val() == '') {
                alert("Bạn chưa nhập số lượng thuốc cấp");
                return;
            }
            if ($("#hRemainingAmount").val() == '' || $("#eRemainingAmount").val() == '' || $("#rhRemainingAmount").val() == '' || $("#rhzRemainingAmount").val() == '') {
                alert("Bạn chưa nhập số lượng thuốc còn lại");
                return;
            }
            model.Tuoi = textPatientAge.value();
            model.Diachi = $("#textPatientAddress").val();
            model.Sodienthoai = $("#mobileNumber").val();

            var strHDose = $("#hDose").val();
            if (strHDose.search(regstr)==-1 || $("#eDose").val().search(regstr)==-1 || $("#rhDose").val().search(regstr)==-1
                || $("#hAmount").val().search(regstr)==-1 || $("#eAmount").val().search(regstr)==-1 || $("#rhAmount").val().search(regstr)==-1
                || $("#hRemainingAmount").val().search(regstr)==-1 || $("#eRemainingAmount").val().search(regstr)==-1 || $("#rhRemainingAmount").val().search(regstr)==-1
                || $("#rhzRemainingAmount").val().search(regstr)==-1 || $("#rhzAmount").val().search(regstr)==-1 || $("#rhzDose").val().search(regstr)==-1) {
                alert("Số thuốc bạn nhập không đúng (phải là số nguyên hoặc số thập phân)");
                return;
            } else {
                model.LieuLuong_H = $("#hDose").val();
                model.LieuLuong_E = $("#eDose").val();model.LieuLuong_RH = $("#rhDose").val();model.LieuLuong_RHZ = $("#rhzDose").val();
                model.LuongCap_H = $("#hAmount").val();model.LuongCap_E = $("#eAmount").val();model.LuongCap_RH = $("#rhAmount").val();model.LuongCap_RHZ = $("#rhzAmount").val();
                model.ConLai_H = $("#hRemainingAmount").val();model.ConLai_E = $("#eRemainingAmount").val();model.ConLai_RH = $("#rhRemainingAmount").val();
                model.ConLai_RHZ = $("#rhzRemainingAmount").val();
            }

            model.NgayGiamSat = kendo.toString(supervisoryDate.value(),"yyyy-MM-dd HH:mm:ss");
            model.NgayCapThuocGanNhat = kendo.toString(lastedMedicineIssuedDate.value(),"yyyy-MM-dd HH:mm:ss");
            model.NhanXetCuaGiamSatVien = $("#comments").val();
            model.DanDoBenhNhan = $("#recommendations").val();
            model.DienBienDieuTri = $("#treatmentDevelopment").val();
            model.NhapTuMobile = "false";

            $.ajax({
                url: "@Url.Action("SaveBaoCaoGiamSatBenhNhan", "HoTroDieuTri")",
                data: JSON.stringify(model),
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    alert("Dữ liệu lưu thành công");
                    dataSourceSupervisions.data(data);
                    if (isNew == 1) {
                        haveChanged = 1;
                    }
                },
                failure: function(errMsg) {
                    alert(errMsg);
                }
            });

        });

        var dataSourceSupervisions = new kendo.data.DataSource({
            schema: {
                model: {
                    fields: {

                    }
                }
            }
        });
        var dropdownSupervisions = $("#dropdownSupervisions").kendoDropDownList({
            autoBind: true,
            optionLabel: "---",
            dataTextField: 'StrNgayGiamSat',
            dataValueField: "ID",
            filter: "contains",
            dataSource: dataSourceSupervisions,
            change: onViewSupervision
        }).data("kendoDropDownList");

        function onViewSupervision() {
            var value =dropdownSupervisions.select();
            if (value>0) {
                isNew = 0;
                var model = dataSourceSupervisions.at(value-1);

                var selectedRow = gridBenhNhanGS.select();
                var modelBenhNhan = gridBenhNhanGS.dataItem(selectedRow);

                $("#textPatientName").val(modelBenhNhan.HoTen);

                textPatientAge.value(modelBenhNhan.Tuoi);
                textPatientGender.value(modelBenhNhan.Gioitinh);
                $("#textPatientAddress").val(model.Diachi);
                $("#mobileNumber").val(model.Sodienthoai);
                treatmentDate.value(kendo.parseDate(modelBenhNhan.NgayDT,"yyyy-MM-dd"));
                supervisoryDate.value(kendo.parseDate(model.NgayGiamSat,"yyyy-MM-dd"));
                lastedMedicineIssuedDate.value(kendo.parseDate(model.NgayCapThuocGanNhat,"yyyy-MM-dd"));
                textPatientPhanLoaiBenh.value(modelBenhNhan.ID_PhanLoaiBenh);
                var strHDose = model.LieuLuong_H + "";$("#hDose").val(strHDose);
                var strEDose = model.LieuLuong_E + "";$("#eDose").val(strEDose);
                var strRHDose = model.LieuLuong_RH + "";$("#rhDose").val(strRHDose);
                var strRHZDose = model.LieuLuong_RHZ + "";$("#rhzDose").val(strRHZDose);
                var strHAmount = model.LuongCap_H + "";$("#hAmount").val(strHAmount);
                var strEAmount = model.LuongCap_E + "";$("#eAmount").val(strEAmount);
                var strRHAmount = model.LuongCap_RH + "";$("#rhAmount").val(strRHAmount);
                var strRHZAmount = model.LuongCap_RHZ + "";$("#rhzAmount").val(strRHZAmount);
                var strHRemainingAmount = model.ConLai_H + "";$("#hRemainingAmount").val(strHRemainingAmount);
                var strERemainingAmount = model.ConLai_E + "";$("#eRemainingAmount").val(strERemainingAmount);
                var strRHRemainingAmount = model.ConLai_RH + "";$("#rhRemainingAmount").val(strRHRemainingAmount);
                var strRHZRemainingAmount = model.ConLai_RHZ + "";$("#rhzRemainingAmount").val(strRHZRemainingAmount);
                $("#comments").val(model.NhanXetCuaGiamSatVien);
                $("#recommendations").val(model.DanDoBenhNhan);
                $("#treatmentDevelopment").val(model.DienBienDieuTri);
                therapy.value(modelBenhNhan.ID_PhacdoDT);
            } else
                resetSupervisionForm();
        }

        $("#gridBenhNhanGS").delegate("tbody>tr", "dblclick", function(){
            var selectedRow = gridBenhNhanGS.select();
            var model = gridBenhNhanGS.dataItem(selectedRow);

            $("#textPatientName").val(model.HoTen);

            if (model.SoLanGiamSat > 0) {
                var paramdetail = {benhNhanId: model.ID_BenhNhan};
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetDsGiamSatCuaBenhNhan", "HoTroDieuTri")",
                    data: JSON.stringify(paramdetail),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(data){
                        dataSourceSupervisions.data(data);
                        //dataSourceSupervisions.fetch();
                        dropdownSupervisions.value('');
                    },
                    failure: function(errMsg) {
                        alert(errMsg);
                    }
                });
            } else {
                dataSourceSupervisions.data({});
                //dataSourceSupervisions.fetch();
                //dropdownSupervisions.value('');
            }

            resetSupervisionForm();
            centerPopup();
            loadPopup();

        });
        var genders =  [
            {gender: "true", sex: 'Nam'},
            {gender: "false", sex: 'Nữ'}
        ];
        var dataSourceGender = new kendo.data.DataSource({
            data: genders
        });
        var textPatientGender = $("#textPatientGender").kendoDropDownList({
            optionLabel: "---",
            dataTextField: "sex",
            dataValueField: "gender",
            dataSource: dataSourceGender
        }).data("kendoDropDownList");
        var textPatientAge = $("#textPatientAge").kendoNumericTextBox({
            format: "n0",
            min: 0,
            max: 150,
            step: 1
        }).data("kendoNumericTextBox");
        var treatmentDate = $("#treatmentDate").kendoDatePicker({
            format: "dd/MM/yyyy",
        }).data("kendoDatePicker");
        var supervisoryDate = $("#supervisoryDate").kendoDatePicker({
            format: "dd/MM/yyyy",
            value: new Date()
        }).data("kendoDatePicker");
        var lastedMedicineIssuedDate = $("#lastedMedicineIssuedDate").kendoDatePicker({
            format: "dd/MM/yyyy",
        }).data("kendoDatePicker");
        var textPatientPhanLoaiBenh = $("#textPatientPhanLoaiBenh").kendoDropDownList({
            optionLabel: '---',
            dataTextField: "Ten_PhanLoaiBenh",
            dataValueField: "ID_PhanLoaiBenh",
            filter: "contains",
            dataSource: dataSourceLoaiBenh
        }).data("kendoDropDownList");
        var therapy = $("#therapy").kendoDropDownList({
            optionLabel: '---',
            dataTextField: "Ten_PhacdoDT",
            dataValueField: "ID_PhacdoDT",
            filter: "contains",
            dataSource: dataSourceTherapy
        }).data("kendoDropDownList");

        function resetSupervisionForm() {
            textPatientAge.value('');
            textPatientGender.value('');
            $("#textPatientAddress").val('');
            $("#mobileNumber").val('');
            textPatientPhanLoaiBenh.value('');
            therapy.value('');
            $("#hDose").val('');$("#eDose").val('');$("#rhDose").val('');
            $("#hAmount").val('');$("#eAmount").val('');$("#rhAmount").val('');
            $("#hRemainingAmount").val('');$("#eRemainingAmount").val('');$("#rhRemainingAmount").val('');
            $("#comments").val('');
            $("#recommendations").val('');
            $("#treatmentDevelopment").val('');
            treatmentDate.value('');
            lastedMedicineIssuedDate.value('');
        };

        $("#buttonExportExcel2").click(function() {
            exportExcel();
        });
        function exportExcel(){
            var selectedRow = gridBenhNhanGS.select();
            var model = gridBenhNhanGS.dataItem(selectedRow);

            if (model.SoLanGiamSat > 0) {
                var paramdetail = {ID_BenhNhan: model.ID_BenhNhan};
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("XuatBaoCaoGiamSatCuaBenhNhan", "HoTroDieuTri")",
                    data: JSON.stringify(paramdetail),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(data) {
                        window.open('@Url.Content("~/")' + data, '_blank');
                    },
                    failure: function(errMsg) {
                        alert(errMsg);
                    }
                });
            }

        }

        $("#bgPopup2").data("state",0);
        $("#popupClose2").click(function(){
            disablePopup();
        });
        $("#buttonCancel").click(function(){
            disablePopup();
        });
        $(document).keypress(function(e){
            if(e.keyCode==27) {
                disablePopup();
            }
        });

        $(window).resize(function() {
            centerPopup();
        });

        function loadPopup(){
            //loads popup only if it is disabled
            if($("#bgPopup2").data("state")==0){
                $("#bgPopup2").css({
                    "opacity": "0.7"
                });
                $("#bgPopup2").fadeIn("medium");
                $("#Popup2").fadeIn("medium");
                $("#bgPopup2").data("state",1);
            }
        }
        function disablePopup(){
            if ($("#bgPopup2").data("state")==1){
                $("#bgPopup2").fadeOut("medium");
                $("#Popup2").fadeOut("medium");
                $("#bgPopup2").data("state",0);
            }
            dropdownSupervisions.value('');
            if (haveChanged == 1) {
                dataSourceBenhNhanGS.fetch();
            }
        }
        function centerPopup(){
            var winw = $(window).width();
            var winh = $(window).height();
            var popw = $('#Popup2').width();
            var poph = $('#Popup2').height();
            $("#Popup2").css({
                "position" : "absolute",
                "top" : winh/2-poph/2,
                "left" : winw/2-popw/2
            });
            //IE6
            $("#bgPopup2").css({
                "height": winh
            });
        }

        $('#buttonDelete').click(function(){
            var value =dropdownSupervisions.select();
            if (value>0) {
                $.confirm({
                    'title'		: 'Thông báo',
                    'message'	: 'Bạn có chắc chắn muốn xóa dữ liệu này?',
                    'buttons'	: {
                        'Có'	: {
                            'class'	: 'blue',
                            'action': function(){
                                var model = dataSourceSupervisions.at(value-1);

                                var rmps = { ID: model.ID, req: jsonReq, ID_BenhNhan: model.ID_BenhNhan};
                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("XoaBaoCaoGiamSat", "HoTroDieuTri")",
                                    data: JSON.stringify(rmps),
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function(data){
                                        alert("Dữ liệu đã được xóa");
                                        dataSourceSupervisions.data(data);
                                        haveChanged = 1;
                                        resetSupervisionForm();
                                    },
                                    failure: function(errMsg) {
                                        alert(errMsg);
                                    }
                                });
                            }
                        },
                        'Không'	: {
                            'class'	: 'gray',
                            'action': function(){}	// Nothing to do in this case. You can as well omit the action property.
                        }
                    }
                });
            }
        });

    });

</script>
<h2>Danh sách bệnh nhân được giám sát</h2>
Tỉnh:&nbsp;<input id="filterProvince" style="width:130px" />&nbsp;&nbsp;&nbsp;
Huyện:&nbsp;<input id="filterDistrict" style="width:200px" />&nbsp;&nbsp;&nbsp;
Phường / Xã:&nbsp;<input id="filterCommune" style="width:200px" /><br />
<p style="height:3px"></p>
Ngày điều trị:&nbsp;&nbsp;&nbsp;<input id="fromDate" name="fromDate" value="" style="width:100px;" />&nbsp;&nbsp;&nbsp;
-&nbsp;&nbsp;&nbsp;<input id="toDate" name="toDate" value="" style="width:100px;" />
Lọc theo:&nbsp;<input id="dropdownSupervisionStatus" style="width:140px" />&nbsp;
<input class="btn btn-primary" style="width:50px;cursor:pointer;" id="buttonSearch" name="buttonSearch" value="Tìm" readonly /><br />
<p style="height:3px"></p>
<font color="#EE7318"><div id="log">&nbsp;</div></font>
<div id="gridBenhNhanGS"></div>
<p style="height:3px"></p>
<input class="btn btn-primary" id="buttonExcel" name="buttonExcel" style="width:80px;cursor:pointer;" readonly value="Xuất Excel" />
<div id="Popup2">
    <div style="margin-top: 0px;marign-left:0px;padding-left:0px;margin-bottom:0px;padding-bottom:0px;height:30px;" class="k-window-titlebar k-header">
        &nbsp;<span class="k-window-title">Thông tin giám sát</span>
        <div class="k-window-actions">
            <a id="popupClose2" role="button" href="#" class="k-window-action k-link">
                <span role="presentation" class="k-icon k-i-close">Close</span>
            </a>
        </div>
    </div><br /><br />
    <div>
        <div class="k-edit-form-container" style="margin-top:10px;padding-top:0px;width:900px;padding-left:10px;">
            <div class="k-edit-label" style="width:41px;text-align:left;padding-right:5px;">Họ tên</div>
            <input type="text" id="textPatientName" name="textPatientName" disabled />&nbsp;&nbsp;
            <div class="k-edit-label" style="width:auto;text-align:left;padding-right:5px;">Tuổi</div>
            <input id="textPatientAge" name="textPatientAge" type="number" min="1" max="150" style="width:80px;" />&nbsp;&nbsp;
            <div class="k-edit-label" style="width:auto;text-align:left;padding-right:5px;">Giới tính</div>
            <input id="textPatientGender" name="textPatientGender" style="width:60px;margin-top:0px;padding-top:0px;" /><br />
            <div class="k-edit-label" style="width:41px;text-align:left;padding-right:5px;">Địa chỉ</div>
            <input name="textPatientAddress" id="textPatientAddress" style="width:350px;" type="text">&nbsp;&nbsp;
            <div class="k-edit-label" style="width:auto;text-align:left;padding-right:5px;">Di động</div>
            <input name="mobileNumber" id="mobileNumber" style="width:90px;" onkeyup="this.value=this.value.replace(/[^\d]+/,'')" >&nbsp;&nbsp;
            <div class="k-edit-label" style="width:auto;text-align:right;padding-right:5px;">Ngày điều trị</div>
            <input id="treatmentDate" value="" style="width:100px;" /><br />
            <div class="k-edit-label" style="width:55px;text-align:left;padding-right:5px;">Thể bệnh</div>
            <input name="textPatientPhanLoaiBenh" id="textPatientPhanLoaiBenh" type="text">&nbsp;&nbsp;
            <div class="k-edit-label" style="width:auto;text-align:left;padding-right:5px;">Phác đồ</div>
            <input id="therapy" style="width:150px;" />&nbsp;&nbsp;
            <div class="k-edit-label" style="width:auto;text-align:left;padding-right:5px;">Liều lượng thuốc/ngày:</div>
            H=<input name="hDose" style="width:30px;" id="hDose" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            E=<input name="eDose" style="width:30px;" id="eDose" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            RH=<input name="rhDose" style="width:30px;" id="rhDose" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            RHZ=<input name="rhzDose" style="width:30px;" id="rhzDose" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')"><br />
            <div class="k-edit-label" style="width:55px;text-align:left;padding-right:5px;">Ngày GS</div>
            <input id="supervisoryDate" value="" style="width:100px;" />&nbsp;&nbsp;
            <div class="k-edit-label" style="width:auto;text-align:left;padding-right:5px;">Ngày cấp thuốc gần nhất</div>
            <input id="lastedMedicineIssuedDate" value="" style="width:100px;" />&nbsp;&nbsp;<br />
            <div class="k-edit-label" style="width:120px;text-align:left;padding-right:5px;">Số lượng thuốc cấp</div>
            H=<input name="hAmount" style="width:30px;" id="hAmount" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            E=<input name="eAmount" style="width:30px;" id="eAmount" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            RH=<input name="rhAmount" style="width:30px;" id="rhAmount" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            RHZ=<input name="rhzAmount" style="width:30px;" id="rhzAmount" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')">&nbsp;&nbsp;&nbsp;&nbsp;
            <div class="k-edit-label" style="width:auto;text-align:left;padding-right:5px;">Số lượng thuốc còn lại</div>
            H=<input name="hRemainingAmount" style="width:30px;" id="hRemainingAmount" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            E=<input name="eRemainingAmount" style="width:30px;" id="eRemainingAmount" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            RH=<input name="rhRemainingAmount" style="width:30px;" id="rhRemainingAmount" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')" >
            RHZ=<input name="rhzRemainingAmount" style="width:30px;" id="rhzRemainingAmount" onkeyup="this.value=this.value.replace(/[^\d\]+[\.]./,'')"><br />
            <div class="k-edit-label" style="width:200px;text-align:left;padding-right:5px;">Nhận xét của GSV</div>
            <textarea id="comments" style="width:350px;"></textarea><br />
            <div class="k-edit-label" style="width:200px;text-align:left;padding-right:5px;">Diễn biến của BN trong quá trình điều trị</div>
            <textarea id="treatmentDevelopment" style="width:350px;"></textarea><br />
            <div class="k-edit-label" style="width:200px;text-align:left;padding-right:5px;">Dặn dò BN</div>
            <textarea id="recommendations" style="width:350px;"></textarea><br />
        </div>

        <p style="padding-left:10px;padding-top:10px;">
            <font color="#08C"><strong>Xem báo cáo giám sát ngày</strong>:</font>&nbsp;<input id="dropdownSupervisions" name="dropdownSupervisions" style="width:110px" />&nbsp;&nbsp;
            <input class="btn btn-primary" style="width:70px;" value="Xuất Excel" id="buttonExportExcel2" name="buttonExportExcel2" />
            <input class="btn btn-primary" style="width:170px;" value="Thêm báo cáo giám sát mới" id="buttonNew" name="buttonNew" />
            <input class="btn btn-primary" style="width:60px;" value="Lưu" id="buttonUpdate" name="buttonUpdate" />
            <input class="btn btn-primary" style="width:50px;" value="Xóa" id="buttonDelete" name="buttonDelete" />
            <input class="btn btn-primary" style="width:60px;" value="Thoát" id="buttonCancel" name="buttonCancel" />
        </p>
    </div>
</div>
<div id="bgPopup2"></div>
