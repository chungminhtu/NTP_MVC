@model NTP_MVC.Models.SoDieuTriModel
<script>
    var ID_BenhNhan = "";
    var ID_BenhNhanCD = "";
    function OnGridBNFocusedRowChanged(s, e) {
        ID_BenhNhan = s.GetRowKey(s.GetFocusedRowIndex());
    }
    function OnGridBNCDFocusedRowChanged(s, e) {
        ID_BenhNhanCD = s.GetRowKey(s.GetFocusedRowIndex());
    }
    function OnGridBNRowDblClick(s, e) {
        window.location.href = '@Url.Content("~")' + "SoDieuTri?ID_BenhNhan=" + GridBenhNhan.GetRowKey(GridBenhNhan.GetFocusedRowIndex());
    }

    function OnGridBNFocusedRowChanged(s, e) {
        if (s.GetFocusedRowIndex() != -1) {
            ID_BenhNhan = s.GetRowKey(s.GetFocusedRowIndex());
            GridSoDieuTri.PerformCallback();
        }
    }

    function searchBN() {
        if (ComboBoxTinh.GetValue() != null) {
            $.ajax({
                url: '@Url.Action("SearchBenhNhan","SoDieuTri")',
                type: "POST",
                data: {
                    matinh: ComboBoxTinh.GetValue(),
                    mahuyen: ComboBoxHuyen.GetValue(),
                    hoten: txtHoTen.GetText(),
                    mabnql: txtMaBNQL.GetText(),
                    socmnd: txtSoCMND.GetText(),
                    nkbfrom: NKBFrom.GetText(),
                    nkbto: NKBTo.GetText()
                },
                success: function (d) {
                    $("#DivGridBenhNhan").html(d);
                }

            });
        }
        else {
            alert("Chưa chọn địa phương cần tìm");
        }
    }
</script>
@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "ListBenhNhan";
    settings.RequiredMarkDisplayMode = RequiredMarkMode.None;
    settings.Width = Unit.Percentage(100);
    settings.Items.AddGroupItem(group =>
    {
        group.Caption = "Tìm kiếm bệnh nhân";
        group.GroupBoxDecoration = GroupBoxDecoration.Box;
        group.Width = Unit.Percentage(100);
        group.Items.Add(item =>
        {
            item.Caption = "Thuộc đơn vị";
            item.ShowCaption = DefaultBoolean.False;
            item.SetNestedContent(() =>
            {
                ViewContext.Writer.Write("<table><tr><td style=\"padding-right:5px;\">");
                Html.RenderPartial("_ComboBoxTinh");
                ViewContext.Writer.Write("</td><td style=\"padding-right:50px;\">");
                Html.RenderPartial("_ComboBoxHuyen");
                ViewContext.Writer.Write("</td><td style=\"padding-right:5px;\">");
                Html.DevExpress().TextBox(mySettings =>
                {
                    mySettings.Name = "txtMaBNQL";
                    mySettings.Properties.Caption = "Mã BNQL";
                    mySettings.Width = Unit.Pixel(100);
                }).Render();
                ViewContext.Writer.Write("</td><td style=\"padding-right:5px;\">");
                Html.DevExpress().TextBox(mySettings =>
                {
                    mySettings.Name = "txtSoCMND";
                    mySettings.Properties.Caption = "Số CMND";
                    mySettings.Width = Unit.Pixel(100);
                }).Render();
                
                
                ViewContext.Writer.Write("</td></tr><tr><td colspan='2' style=\"padding-right:5px;\">");
                Html.DevExpress().TextBox(mySettings =>
                {
                    mySettings.Name = "txtHoTen";
                    mySettings.Properties.Caption = "Họ tên";
                    mySettings.Width = Unit.Pixel(300);
                }).Render();
                ViewContext.Writer.Write("</td><td style=\"padding-right:5px;\">");
                Html.DevExpress().DateEdit(mySettings =>
                {
                    mySettings.Name = "NKBFrom";
                    mySettings.Properties.Caption = "Ngày khám bệnh từ";
                    mySettings.Width = Unit.Pixel(100);
                }).Render();
                ViewContext.Writer.Write("</td><td style=\"padding-right:5px;\">");
                Html.DevExpress().DateEdit(mySettings =>
                {
                    mySettings.Name = "NKBTo";
                    mySettings.Properties.Caption = "đến";
                    mySettings.Width = Unit.Pixel(100);
                }).Render();
                ViewContext.Writer.Write("</td><td style=\"padding-right:5px;\">");
                Html.DevExpress().Button(
               MyButton =>
               {
                   MyButton.Name = "btnSearch";
                   MyButton.Text = "Tìm kiếm";
                   MyButton.Height = 30;
                   MyButton.Images.Image.Url = "~/Content/Images/search.png";
                   MyButton.ClientSideEvents.Click = "function() { searchBN(); }";
                   MyButton.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
               }).Render();
                ViewContext.Writer.Write("</td></tr></table>");
            });
        }); 

    });

    settings.Items.AddGroupItem(group =>
    {
        group.Caption = "Danh sách bệnh nhân";
        group.ShowCaption = DefaultBoolean.True;
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        group.Width = Unit.Percentage(100);
        group.Items.Add(m =>
        {
            m.ShowCaption = DefaultBoolean.False;
            m.RequiredMarkDisplayMode = FieldRequiredMarkMode.Hidden;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().Panel(settings5 =>
            {
                settings5.Name = "Panel";
                settings5.FixedPosition = PanelFixedPosition.None;
                settings5.SettingsCollapsing.ExpandEffect = PanelExpandEffect.Auto;
                settings5.SetContent(() =>
                {
                    Html.DevExpress().Button(
                       MyButton =>
                       {
                           MyButton.Name = "btnThemMoi";
                           MyButton.Width = 90;
                           MyButton.Text = "Thêm bệnh nhân";
                           MyButton.ClientSideEvents.Click = "function() { document.location='" + DevExpressHelper.GetUrl(
                                                                     new { Controller = "SoDieuTri", Action = "Edit" }) +
                                                                     "?ID_BenhNhan=0" +
                                                                   "&ID_SoDieuTri=0'}";
                           MyButton.Images.Image.Url = "~/Content/Images/add.png";
                           MyButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                       }).Render();
                    Html.DevExpress().Button(
                            MyButton =>
                            {
                                MyButton.Name = "btnSua";
                                MyButton.Width = 90;
                                MyButton.Text = "Sửa bệnh nhân";
                                MyButton.Images.Image.Url = "~/Content/Images/edit.png";
                                MyButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                                MyButton.ClientSideEvents.Click = "function() { document.location='" + DevExpressHelper.GetUrl(
                                                                   new { Controller = "SoDieuTri", Action = "Edit" }) +
                                                                 "?ID_BenhNhan=' + GridBenhNhan.GetRowKey(GridBenhNhan.GetFocusedRowIndex())+'" +
                                                                  "&ID_SoDieuTri='+GridSoDieuTri.GetRowKey(GridSoDieuTri.GetFocusedRowIndex());}";
                            }).Render();
                    Html.DevExpress().Button(
                            MyButton =>
                            {
                                MyButton.Name = "btnXoa";
                                MyButton.Width = 90;
                                MyButton.Text = "Xóa bệnh nhân";
                                MyButton.Images.Image.Url = "~/Content/Images/delete.png";
                                MyButton.ClientSideEvents.Click = "function() { if(confirm('bạn có muốn xóa dữ liệu này không?')) {document.location='" + DevExpressHelper.GetUrl(
                                                                       new { Controller = "SoDieuTri", Action = "DeleteBN" }) +
                                                                     "?ID_BenhNhan=' + GridBenhNhan.GetRowKey(GridBenhNhan.GetFocusedRowIndex());}}";
                                MyButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                            }).Render();
                    Html.DevExpress().Button(
                        MyButton =>
                        {
                            MyButton.Name = "btnInBN";
                            MyButton.Text = "In danh sách bệnh nhân";
                            MyButton.Images.Image.Url = "~/Content/Images/print.png";
                            //MyButton.ClientSideEvents.Click = "function() { if(confirm('Want to delete?')) { GridSoDieuTri.DeleteRow(); } }";
                            MyButton.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
                            MyButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                            MyButton.Enabled = Session["ID_BenhNhan"] != "";
                        }).Render();
                });
            }).Render();
            ViewContext.Writer.Write("<div id='DivGridBenhNhan'>");
            Html.RenderPartial("_GridBenhNhan", Model.ListBN);
            ViewContext.Writer.Write("</div>");
        });


    });
    settings.Items.AddGroupItem(group =>
   {
       group.Caption = "Sổ điều trị của bệnh nhân";
       group.ShowCaption = DefaultBoolean.True;
       group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
       group.Width = Unit.Percentage(100);
       group.Items.Add(m =>
       {
           m.ShowCaption = DefaultBoolean.False;
           m.RequiredMarkDisplayMode = FieldRequiredMarkMode.Hidden;
       }).SetNestedContent(() =>
       {
           Html.DevExpress().Panel(settings5 =>
           {
               settings5.Name = "Panel1";
               settings5.FixedPosition = PanelFixedPosition.None;
               settings5.SettingsCollapsing.ExpandEffect = PanelExpandEffect.Auto;
               settings5.SetContent(() =>
               {
                   Html.DevExpress().Button(
                      MyButton =>
                      {
                          MyButton.Name = "btnThemMoi1";
                          MyButton.Width = 90;
                          MyButton.Text = "Thêm sổ điều trị";
                          MyButton.ClientSideEvents.Click = "function() { document.location='" + DevExpressHelper.GetUrl(
                                                                      new { Controller = "SoDieuTri", Action = "Edit" }) +
                                                                      "?ID_BenhNhan='+ GridBenhNhan.GetRowKey(GridBenhNhan.GetFocusedRowIndex())+'" +
                                                                    "&ID_SoDieuTri=0'}";
                          MyButton.Images.Image.Url = "~/Content/Images/add.png";
                          MyButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                      }).Render();
                   Html.DevExpress().Button(
                           MyButton =>
                           {
                               MyButton.Name = "btnSua1";
                               MyButton.Width = 90;
                               MyButton.Text = "Sửa sổ điều trị";
                               MyButton.Images.Image.Url = "~/Content/Images/edit.png";
                               MyButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                               MyButton.ClientSideEvents.Click = "function() { document.location='" + DevExpressHelper.GetUrl(
                                                                     new { Controller = "SoDieuTri", Action = "Edit" }) +
                                                                   "?ID_BenhNhan=' + GridBenhNhan.GetRowKey(GridBenhNhan.GetFocusedRowIndex())+'" +
                                                                    "&ID_SoDieuTri='+GridSoDieuTri.GetRowKey(GridSoDieuTri.GetFocusedRowIndex());}";
                           }).Render();
                   Html.DevExpress().Button(
                           MyButton =>
                           {
                               MyButton.Name = "btnXoa1";
                               MyButton.Width = 90;
                               MyButton.Text = "Xóa sổ điều trị";
                               MyButton.Images.Image.Url = "~/Content/Images/delete.png";
                               MyButton.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                               MyButton.ClientSideEvents.Click = "function() { if(confirm('bạn có muốn xóa dữ liệu này không?')) {document.location='" + DevExpressHelper.GetUrl(
                                                                       new { Controller = "SoDieuTri", Action = "DeleteSDT" }) +
                                                                      "?ID_SoDieuTri='+GridSoDieuTri.GetRowKey(GridSoDieuTri.GetFocusedRowIndex());}}";
                           }).Render();
               });
           }).Render();

           Html.RenderPartial("_GridSoDieuTri", Model.ListSDT);
       });
   });
}).GetHtml()

